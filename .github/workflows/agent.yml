name: Build and release agent

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          npm i --prefix agent
          npm run build --prefix agent
      - name: Create release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Upload Windows build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./agent/exe/touchdeck-agent-${{ github.ref }}-windows-x64.exe
          asset_name: touchdeck-agent-${{ github.ref }}-windows-x64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload Mac build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./agent/exe/touchdeck-agent-${{ github.ref }}-mac-x64
          asset_name: touchdeck-agent-${{ github.ref }}-mac-x64
          asset_content_type: application/octet-stream
      - name: Upload Linux build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./agent/exe/touchdeck-agent-${{ github.ref }}-linux-x64
          asset_name: touchdeck-agent-${{ github.ref }}-linux-x64
          asset_content_type: application/octet-stream
      - name: Trigger Netlify build
        run: curl -X POST -d {} https://api.netlify.com/build_hooks/${{ secrets.NETLIFY_BUILD_HOOK_ID }}
